use QLDT 
GO
SELECT * FROM GIAOVIEN
SELECT * FROM GV_DT
SELECT * FROM BOMON
SELECT * FROM KHOA
SELECT * FROM DETAI
SELECT * FROM CHUDE
SELECT * FROM CONGVIEC
SELECT * FROM THAMGIADT
SELECT * FROM NGUOITHAN
GO 

CREATE PROCEDURE SP_TEN @MABM CHAR(5),
						@TENBM NVARCHAR(100) OUTPUT,
						@SLGV INT OUTPUT,
						@LUONGTB FLOAT OUTPUT,
						@TENTBM NVARCHAR(100) OUT
AS
	IF(NOT EXISTS (SELECT * FROM BOMON BM1 WHERE BM1.MABM = @MABM))
		RETURN 0
	ELSE 
	BEGIN
		SELECT @TENBM = BM.TENBM, @SLGV = COUNT(GV.MAGV),@LUONGTB = AVG(GV.LUONG), @TENTBM =TBM.HOTEN
		FROM BOMON BM JOIN GIAOVIEN GV ON BM.MABM = GV.MABM JOIN GIAOVIEN TBM ON TBM.MAGV = BM.TRUONGBM
		WHERE BM.MABM = @MABM 
		GROUP BY BM.MABM, BM.TENBM,TBM.HOTEN
		RETURN 1
	END
GO

DECLARE @TENBM NVARCHAR(100) ,
		@SLGV INT ,
		@LUONGTB FLOAT ,
		@TENTBM NVARCHAR(100), @R INT
--CACH A
EXEC @R= SP_TEN 'HTTT', @TENBM OUT,@SLGV OUT,@LUONGTB OUT,@TENTBM OUT
PRINT N'KẾT QUẢ'

SELECT @R KQ,@TENBM TENBM,@SLGV SLGV,@LUONGTB LUONGTB,@TENTBM TENTBM
DROP PROCEDURE SP_TEN
GO

--J.Xuất	ra	toàn	bộ danh	sách	giáo	viên.
CREATE PROCEDURE DS_GIAOVIEN
AS
	IF(NOT EXISTS (SELECT * FROM GIAOVIEN))
		RETURN 0
	ELSE 
	BEGIN
		SELECT GV.*
		FROM GIAOVIEN GV
		RETURN 1
	END
GO

DECLARE @R INT
EXEC @R = DS_GIAOVIEN
PRINT N'KẾT QUẢ'
GO
--k. Tính	số lượng	đề tài mà	một	giáo	viên đang	thực	hiện.	
CREATE PROCEDURE SLDT  @MAGV CHAR(5),
						@SLDT INT OUTPUT
AS
	IF(NOT EXISTS (SELECT * FROM GIAOVIEN GV1 WHERE GV1.MAGV = @MAGV))
		RETURN 0
	ELSE 
	BEGIN
		SELECT @SLDT=COUNT(DISTINCT TG.MADT)
		FROM GIAOVIEN GV JOIN THAMGIADT TG ON TG.MAGV = GV.MAGV
		WHERE GV.MAGV  = @MAGV
		GROUP BY GV.MAGV
		RETURN 1
	 END
GO

DECLARE @R INT, @SLDTGV INT, @MAGV CHAR(5)
SET @MAGV = '003'

EXEC @R = SLDT @MAGV, @SLDTGV OUT
PRINT N'KẾT QUẢ CAU K'
SELECT @R KQ,@MAGV MAGV, @SLDTGV SLDT

DROP PROCEDURE SLDT
GO

--l. In	 thông	 tin	 chi	 tiết	 của	một	 giáo	 viên(sử dụng	lệnh	 print):	 Thông	 tin	 cá	
--nhân,	Số lượng	đề tài tham	gia,	Số lượng	thân	nhân	của	giáo	viên đó.
CREATE PROCEDURE TTGV  @MAGV CHAR(5),@SLDT INT OUTPUT,@SLTN INT OUTPUT
AS
	IF(NOT EXISTS (SELECT * FROM GIAOVIEN GV1 WHERE GV1.MAGV = @MAGV))
		RETURN 0
	ELSE 
	BEGIN
		SELECT @SLDT= COUNT(DISTINCT TG.MADT)
		FROM GIAOVIEN GV JOIN THAMGIADT TG ON TG.MAGV = GV.MAGV
		WHERE GV.MAGV  = @MAGV
		GROUP BY GV.MAGV
		
		SELECT @SLTN = ISNULL(COUNT(NT.TEN),0)
		FROM GIAOVIEN GV2 LEFT JOIN NGUOITHAN NT ON NT.MAGV = GV2.MAGV
		WHERE GV2.MAGV  = @MAGV
		GROUP BY GV2.MAGV
		RETURN 1
	 END
GO

DECLARE @R INT, @SLDT INT,@SLTN INT, @MAGV CHAR(5),@KQ NVARCHAR(100)
SET @MAGV = '003'

EXEC @R = TTGV @MAGV, @SLDT OUT,@SLTN OUT

SET @KQ =  NCHAR(10) + N'THÔNG TIN GIÁO VIÊN:' + N' MAGV = ' + @MAGV + NCHAR(10) + N'SỐ LƯỢNG ĐỀ TÀI THAM GIA: ' + CAST(@SLDT AS CHAR(5))
	+ NCHAR(10) + N'SỐ LƯỢNG THÂN NHÂN : ' + CAST(@SLTN AS CHAR(5))
PRINT N'KẾT QUẢ CAU L: '
PRINT @KQ

--DROP PROCEDURE TTGV
GO
--m. Kiểm	tra	xem	một	giáo	viên có	tồn	tại	hay	không	(dựa	vào	MAGV).
CREATE PROCEDURE TONTAI  @MAGV CHAR(5), @KQ NVARCHAR(100) OUT
AS
	IF(NOT EXISTS (SELECT * FROM GIAOVIEN GV1 WHERE GV1.MAGV = @MAGV))
		SET @KQ =  N'kHONG TON TAI GIAO VIEN'
	ELSE 
		SET @KQ = N'TON TAI GIAO VIEN'
GO

DECLARE @KQ NVARCHAR(100), @MAGV CHAR(5),@R INT
SET @MAGV = '019'

EXEC TONTAI @MAGV,@KQ OUT


PRINT N'KẾT QUẢ CAU M: ' + N'MÃ GIÁO VIÊN: ' + CAST(@MAGV AS NCHAR) + NCHAR(10)
PRINT @KQ

--DROP PROCEDURE TONTAI
GO
--n. Kiểm	tra	quy	định	của	một	giáo	viên:	Chỉ được	thực	hiện	các	đề tài mà	bộ
--môn của	giáo	viên	đó	làm	chủ nhiệm.
CREATE PROCEDURE QUYDINH  @MAGV CHAR(5), @KQ NVARCHAR(100) OUT
AS
	IF(NOT EXISTS (SELECT * FROM GIAOVIEN GV1 WHERE GV1.MAGV = @MAGV))
		SET @KQ =  N'kHONG TON TAI GIAO VIEN'
	ELSE 
		IF(EXISTS (	(SELECT DT.MADT
					FROM GIAOVIEN GV1 JOIN BOMON BM ON GV1.MABM = BM.MABM 
						JOIN GIAOVIEN GVBM ON GVBM.MABM = BM.MABM 
						JOIN DETAI DT ON DT.GVCNDT = GVBM.MAGV
					WHERE GV1.MAGV = @MAGV)
					EXCEPT 
					(SELECT TG.MADT
					FROM GIAOVIEN GV JOIN THAMGIADT TG ON GV.MAGV = TG.MAGV
					WHERE GV.MAGV = @MAGV)))
			SET @KQ =  N'QUY DINH DOI VOI GIAO VIEN NAY LA DUNG'
		ELSE
			SET @KQ =  N'QUY DINH DOI VOI GIAO VIEN NAY LA KHONG DUNG'

GO

DECLARE @KQ NVARCHAR(100), @MAGV CHAR(5),@R INT
SET @MAGV = '001'

EXEC QUYDINH @MAGV,@KQ OUT


PRINT N'KẾT QUẢ CAU N: ' + N'MÃ GIÁO VIÊN: ' + CAST(@MAGV AS NCHAR) + NCHAR(10)
PRINT @KQ

--DROP PROCEDURE QUYDINH
GO
--o. Thực	hiện	thêm	một	phân	công	cho	giáo	viên thực	hiện	một	công	việc	của	đề tài:
--Kiểm	 tra	 thông	 tin	đầu	vào	hợp	lệ:	giáo	viên phải	tồn	tại,	công	việc	phải	tồn	tại,	thời	gian	tham	gia	phải	>0
--Kiểm	tra	quy	định	ở câu	n.
CREATE PROCEDURE THEMCV  @MAGV CHAR(5), @MADT CHAR(5),  @STT INT,@KQ NVARCHAR(100) OUT
AS
	IF(NOT EXISTS (SELECT * FROM GIAOVIEN GV1 WHERE GV1.MAGV = @MAGV))
		SET @KQ =  N'kHONG TON TAI GIAO VIEN'
	ELSE IF (NOT EXISTS (SELECT * FROM CONGVIEC CV1 WHERE CV1.MADT = @MADT AND CV1.SOTT = @STT))
		SET @KQ =  N'kHONG TON TAI CONG VIEC CUA DETAI NAY'
	ELSE
	BEGIN

		INSERT INTO THAMGIADT(MAGV,MADT,STT) VALUES (@MAGV,@MADT,@STT)

		EXEC QUYDINH @MAGV,@KQ OUT
		IF @KQ = N'QUY DINH DOI VOI GIAO VIEN NAY LA KHONG DUNG' 
		BEGIN
			SET @KQ = N'KHÔNG THỂ THÊM ĐƯỢC CHO GIÁO VIÊN VÌ VI PHẠM QUY ĐỊNH'
			DELETE FROM THAMGIADT WHERE MAGV = @MAGV AND MADT = @MADT AND STT = @STT
		END
		ELSE 
			SET @KQ = N'THÊM THÀNH CÔNG GIÁO VIÊN MÀ KHÔNG VI PHẠM QUY ĐỊNH'
	END

GO

DECLARE @KQ NVARCHAR(100), @MAGV CHAR(5), @MADT CHAR(5),@STT INT,@R INT
SET @MAGV = '001'
SET @MADT = '001'
SET @STT = '3'

EXEC THEMCV @MAGV,@MADT ,@STT, @KQ OUT


PRINT N'KẾT QUẢ CAU O: ' +  NCHAR(10)
PRINT @KQ

--DROP PROCEDURE THEMCV
--DROP PROCEDURE QUYDINH
GO
--p. Thực	hiện	xoá	một	giáo	viên theo	mã.	Nếu giáo	viên có	thông	tin	liên	quan	
--(Có	thân	nhân,	có	làm	đề tài,	…)	thì	báo	lỗi.
CREATE PROCEDURE XOAGV  @MAGV CHAR(5), @KQ NVARCHAR(100) OUT
AS
	IF(NOT EXISTS (SELECT * FROM GIAOVIEN GV1 WHERE GV1.MAGV = @MAGV))
		SET @KQ =  N'kHONG TON TAI GIAO VIEN'
	ELSE 
	BEGIN
		IF( @MAGV NOT IN (SELECT TG.MAGV FROM THAMGIADT TG) AND  @MAGV NOT IN  (SELECT NT.MAGV FROM NGUOITHAN NT))
		BEGIN 

			DELETE FROM GIAOVIEN
			WHERE MAGV = @MAGV

			SET @KQ =  N'XOA THANG CONG!!!'
		END
		ELSE SET @KQ =  N'XOA KHONG THANH CONG DO TON TAI THONG TIN O BANG KHAC!!!'
		
	END

GO

DECLARE @KQ NVARCHAR(100), @MAGV CHAR(5),@R INT
SET @MAGV = '011'

EXEC XOAGV @MAGV,@KQ OUT


PRINT N'KẾT QUẢ CAU P: ' + N'MÃ GIÁO VIÊN: ' + CAST(@MAGV AS NCHAR) + NCHAR(10)
PRINT @KQ

--DROP PROCEDURE XOAGV
GO
--q. In	ra	danh	sách	giáo	viên của	một	bo mon	nào	đó	cùng	với	số lượng	đề tài mà	giáo	viên tham	gia,	số thân	nhân,	số giáo	viên mà	giáo	viên đó	quản lý	nếu	có,	…
CREATE PROCEDURE TTGVBM  @MABM CHAR(5), @KQ NVARCHAR(100) OUT
AS
	IF(NOT EXISTS (SELECT * FROM BOMON BM WHERE BM.MABM = @MABM))
		SET @KQ =  N'kHONG TON TAI BỘ MÔN'
	ELSE 
	BEGIN
		SELECT GV.MAGV, GV.HOTEN, ISNULL(COUNT(DISTINCT GVBQL.MAGV),0) SLGVQL, ISNULL(COUNT(DISTINCT TG.MADT),0) SLDT
		FROM BOMON BM JOIN GIAOVIEN GV ON GV.MABM = BM.MABM
			LEFT JOIN GIAOVIEN GVBQL ON GVBQL.GVQLCM = GV.MAGV
			LEFT JOIN THAMGIADT TG ON TG.MAGV = GV.MAGV
		WHERE BM.MABM = @MABM
		GROUP BY GV.MAGV, GV.HOTEN
	END
GO

DECLARE @KQ NVARCHAR(100), @MABM CHAR(5),@R INT
SET @MABM = 'HTTT'

EXEC TTGVBM @MABM,@KQ OUT


PRINT N'KẾT QUẢ CAU Q: ' + N'MÃ BỘ MÔN: ' + CAST(@MABM AS NCHAR) + NCHAR(10)
PRINT @KQ

--DROP PROCEDURE TTGVBM
GO
--r. Kiểm	tra	quy	định	của	2	giáo	viên a,	b:	Nếu	a	là	trưởng	bộ môn	c của	b	thì	lương	của	a	phải	cao	hơn	lương	của	b.	(a,	b:	mã	giáo	viên)
CREATE PROCEDURE TBMTHOAMAN  @MAGVA CHAR(5),  @MAGVB CHAR(5) ,@KQ NVARCHAR(100) OUT
AS
	IF(NOT EXISTS (SELECT * FROM GIAOVIEN GV1 WHERE GV1.MAGV = @MAGVA) OR NOT EXISTS (SELECT * FROM GIAOVIEN GV2 WHERE GV2.MAGV = @MAGVB))
		SET @KQ =  N'kHONG TON TAI GIAO VIEN'
	ELSE IF( @MAGVA = (SELECT BM.TRUONGBM
						FROM GIAOVIEN GV JOIN BOMON BM ON GV.MABM = BM.MABM
						WHERE GV.MAGV = @MAGVB))
	BEGIN
		IF((SELECT GV1.LUONG FROM GIAOVIEN GV1 WHERE GV1.MAGV = @MAGVA) 
			>(SELECT GV2.LUONG FROM GIAOVIEN GV2 WHERE GV2.MAGV = @MAGVB) )
			SET @KQ = N'GGIAO VIÊN A LÀ TRƯỞNG BỘ MÔN CỦA GIÁO VIÊN B VÀ CÓ LUONG CAO HƠN GIAO VIÊN B'
		ELSE
			SET @KQ = N'GGIAO VIÊN A LÀ TRƯỞNG BỘ MÔN CỦA GIÁO VIÊN B VÀ NHƯNG KHÔNG CÓ LUONG CAO HƠN GIAO VIÊN B'
	END 
	ELSE 
		SET @KQ = N'GGIAO VIÊN A LÀ KHONG TRƯỞNG BỘ MÔN CỦA GIÁO VIÊN B '
GO

DECLARE @KQ NVARCHAR(100), @MAGVA CHAR(5),@MAGVB CHAR(5)
SET @MAGVA = '002'
SET @MAGVB = '003'

EXEC TBMTHOAMAN @MAGVA,  @MAGVB,@KQ OUT


PRINT N'KẾT QUẢ CAU r: ' + NCHAR(10)
PRINT @KQ

--DROP PROCEDURE TBMTHOAMAN
GO
--s. Thêm	một	 giáo	 viên:	 Kiểm	 tra	 các	 quy	 định:	 Không	 trùng	 tên,	 tuổi	 >	 18, lương	>	0
CREATE PROCEDURE THEMGV  @MAGV CHAR(5),  @TENGV NVARCHAR(40) ,@LUONG FLOAT, @NGAYSINH DATETIME, @KQ NVARCHAR(100) OUT
AS
	IF(EXISTS (SELECT * FROM GIAOVIEN GV1 WHERE GV1.MAGV = @MAGV) OR EXISTS (SELECT * FROM GIAOVIEN GV2 WHERE GV2.HOTEN = @TENGV))
		SET @KQ =  N'GIÁO VIÊN ĐÃ TỒN TẠI'
	ELSE IF( DATEDIFF(YEAR, @NGAYSINH, GETDATE()) > 18) AND @LUONG > 0
	BEGIN
		INSERT GIAOVIEN(MAGV,HOTEN,NGSINH,LUONG) VALUES (@MAGV,@TENGV,@NGAYSINH,@LUONG)
		SET @KQ =  N'THÊM THÀNH CÔNG'
	END 
	ELSE 
		SET @KQ = N'TUỔI HOẶC LUONG GIAO VIÊN KHÔNG HỢP LỆ '
GO

DECLARE @KQ NVARCHAR(100), @MAGV CHAR(5),  @TENGV NVARCHAR(40) ,@LUONG FLOAT, @NGAYSINH DATETIME
SET @MAGV = '011'
SET @TENGV = N'HUỲNH TRÍ NHÂN'
SET @LUONG = 2000
SET @NGAYSINH ='2003-05-20 00:00:00.000'

EXEC THEMGV @MAGV,  @TENGV ,@LUONG , @NGAYSINH ,@KQ OUT


PRINT N'KẾT QUẢ CAU S: ' + NCHAR(10)
PRINT @KQ

--DROP PROCEDURE THEMGV
GO
--t. Mã	giáo	viên được	xác	định	tự động	theo	quy	tắc:	Nếu	đã	có	giáo	viên 001,002,	003	 thì	MAGV của	giáo	viên mới	sẽ là	004.	Nếu	đã	có	giáo	viên 001,	
--002,	005	thì	MAGV của	giáo	viên mới	là	003.	

CREATE PROCEDURE SETMAV  @KQ CHAR(5) OUT
AS
	DECLARE @I INT = 1
	WHILE (EXISTS( SELECT * FROM GIAOVIEN GV WHERE @I = CAST(GV.MAGV AS INT)))
		SET @I = @I + 1

	SET @KQ = RIGHT('000' + CAST(@I AS VARCHAR(5)),3);
GO

DECLARE @KQ CHAR(5)

EXEC SETMAV @KQ OUT


PRINT N'KẾT QUẢ CAU T: MA GIÁO VIÊN TIẾP THEO LÀ: '
PRINT @KQ

--DROP PROCEDURE SETMAV
GO



use master
go
if DB_ID('QLKS') is not null drop database QLKS
go
create database QLKS
go
use QLKS
go
create table PHONG
(
	MAPHONG varchar(5),
	TINHTRANG nvarchar(5) check (TINHTRANG = N'Rảnh' or TINHTRANG = N'Bận'),
	LOAIPHONG nvarchar(10),
	DONGIA float

	constraint PK_PHONG 
	primary key (MAPHONG)
)
create table KHACHHANG
(
	MAKH varchar(5),
	HOTEN nvarchar(40),
	DIACHI nvarchar(60),
	DTH varchar(11)

	constraint PK_KHACHHANG
	primary key (MAKH)
)
create table DATPHONG
(
	MADP int,
	MAKH varchar(5),
	MAPHONG varchar(5),
	NGAYDP date,
	NGAYTRA date,
	THANHTIEN float

	constraint PK_DATPHONG 
	primary key (MADP)
)

insert PHONG
values ('B0101', N'Bận', N'Thường', 200000), ('B0102', N'Rảnh', N'Thường', 200000), ('B0103', N'Rảnh', N'Thường', 200000), 
('P0101', N'Rảnh', N'Cao cấp', 350000), ('P0102', N'Rảnh', N'Cao cấp', 350000), ('P0103', N'Bận', N'Cao cấp', 350000), 
('V0101', N'Rảnh', N'VIP', 500000), ('V0102', N'Bận', N'VIP', 500000), ('V0103', N'Bận', N'VIP', 500000), ('V0104', N'Rảnh', N'VIP', 500000)

insert KHACHHANG
values ('AA001', N'Đoàn Ngọc Minh Tâm', N'Quận 1, TPHCM', '0984827849'),
('AA002', N'Lê Nguyễn Tâm Nhi', N'Gò Vấp, TP HCM', '0376837581'),
('AA003', N'Lâm Chấn Thiên', N'Quận 9, TP HCM', '0919274574'),
('AA004', N'Đường Khả Nhi', N'Cầu Giấy, Hà Nội', '0383978473'),
('AA005', N'Mã Anh Trúc', N'Đống Đa, Hà Nội', '0838461794')

insert DATPHONG values (0, null, null, null, null, null)

alter table DATPHONG
add
	constraint FK_MAKH
	foreign key (MAKH) 
	references KHACHHANG(MAKH),
	constraint FK_MAPHONG 
	foreign key (MAPHONG) 
	references PHONG(MAPHONG)
go

select * from PHONG
SELECT * FROM KHACHHANG
SELECT * FROM DATPHONG
GO

CREATE PROC spDatPhong @MAKH CHAR(5), @MAPHONG CHAR(5), @NGAYDAT DATETIME, @KQ NVARCHAR(100) OUT
AS
	IF(NOT EXISTS (SELECT * FROM KHACHHANG WHERE @MAKH = MAKH))
		SET @KQ = N'KHÁCH HÀNG KHÔNG TỒN TẠI'
	ELSE IF (NOT EXISTS (SELECT * FROM PHONG WHERE @MAPHONG = MAPHONG))
		SET @KQ = N'PHÒNG KHÔNG TỒN TẠI'
	ELSE IF( NOT EXISTS (SELECT * FROM PHONG WHERE @MAPHONG = MAPHONG AND TINHTRANG = N'Rảnh'))
		SET @KQ = N'PHÒNG ĐANG BẬN KHÔNG NHẬN KHÁCH'
	ELSE 
	BEGIN
		DECLARE @MADP INT
		SELECT TOP 1 @MADP = MADP
		FROM DATPHONG
		ORDER BY MADP DESC

		SET @MADP = @MADP + 1

		INSERT INTO DATPHONG(MADP,MAKH,MAPHONG,NGAYDP) VALUES (@MADP,@MAKH,@MAPHONG,@NGAYDAT)

		UPDATE PHONG SET TINHTRANG = N'Bận'  WHERE MAPHONG = @MAPHONG
		SET @KQ = N'ĐẶT PHÒNG THÀNH CÔNG'
		RETURN 
	END

GO

DECLARE @KQ NVARCHAR(100), @MAKH CHAR(5), @MAPHONG CHAR(5),@NGAYDAT DATE
SET @MAKH = 'AA001'
SET @MAPHONG = 'B0102'
SET @NGAYDAT ='2007-10-20'

EXEC spDatPhong @MAKH , @MAPHONG,@NGAYDAT,@KQ OUT
PRINT N'KÊT QUẢ ĐẶT PHÒNG: ' + @KQ

DROP PROC spDatPhong

--UPDATE PHONG SET TINHTRANG = N'Rảnh'  WHERE MAPHONG = 'B0103'
GO


CREATE PROC spTraPhong @MAKH CHAR(5), @MAPHONG CHAR(5),@ThanhTien INT, @KQ NVARCHAR(100) OUT
AS
	IF(NOT EXISTS (SELECT * FROM KHACHHANG WHERE @MAKH = MAKH))
		SET @KQ = N'KHÁCH HÀNG KHÔNG TỒN TẠI'
	ELSE IF (NOT EXISTS (SELECT * FROM PHONG WHERE @MAPHONG = MAPHONG))
		SET @KQ = N'PHÒNG KHÔNG TỒN TẠI'
	ELSE IF( NOT EXISTS (SELECT * FROM DATPHONG WHERE @MAPHONG = MAPHONG AND @MAKH = MAKH))
		SET @KQ = N'KHÁCH HÀNG KHÔNG THỰC HIỆN ĐẶT PHÒNG'
	ELSE 
	BEGIN
		
		UPDATE DATPHONG SET NGAYTRA = GETDATE() WHERE @MAPHONG = MAPHONG AND @MAKH = MAKH
		-- TÍNH THÀNH TIỀN
		SELECT @ThanhTien = DATEDIFF(DAY,DP.NGAYDP,DP.NGAYTRA) * P.DONGIA
		FROM DATPHONG DP JOIN PHONG P ON P.MAPHONG = DP.MAPHONG
		WHERE @MAPHONG = DP.MAPHONG AND @MAKH = DP.MAKH

		UPDATE DATPHONG SET THANHTIEN = @ThanhTien WHERE @MAPHONG = MAPHONG AND @MAKH = MAKH
		UPDATE PHONG SET TINHTRANG =  N'Rảnh' WHERE @MAPHONG = MAPHONG

		SET @KQ = N'TRẢ PHÒNG THÀNH CÔNG'
	END

GO

DECLARE @KQ NVARCHAR(100), @MAKH CHAR(5), @MAPHONG CHAR(5),@ThanhTien INT
SET @MAKH = 'AA001'
SET @MAPHONG = 'B0102'

EXEC spTraPhong @MAKH , @MAPHONG,@ThanhTien,@KQ OUT
PRINT N'KÊT QUẢ ĐẶT PHÒNG: ' + @KQ

DROP PROC spTraPhong